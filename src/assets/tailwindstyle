//addtodos

import React, { useContext } from 'react'
import TodoContext from '../context/TodoContext'

function AddTodo(){

  
  return (
    <form onSubmit={add} className="flex">
    <input
        type="text"
        placeholder="Write Todo..."
        className="w-full border border-black/10 rounded-l-lg px-3 outline-none duration-150 bg-white/20 py-1.5"
        
    />
    <button type="submit" className="rounded-r-lg px-3 py-1 bg-green-600 text-white shrink-0">
        Add
    </button>
</form>
  )
}

export default AddTodo


// all todos components parent

import React, { useContext } from 'react'
import AddTodo from './AddTodo'
import TodoContext from '../context/TodoContext'
import TodoList from './TodoList'

function AllTodoitems() {
  const {todos,deletedfunc}=useContext(TodoContext);


  return (
    <div className="bg-[#172842] min-h-screen py-8">
    <div className="w-full max-w-2xl mx-auto shadow-md rounded-lg px-4 py-3 text-white">
        <h1 className="text-2xl font-bold text-center mb-8 mt-2">Manage Your Todos</h1>
        <div className="mb-4">
            {/* Todo form goes here */} 
          <AddTodo/>
        </div>
        <div className="flex flex-wrap gap-y-3">
            {/*Loop and Add TodoItem here */}
         
        </div>
    </div>
    </div>
  )
}

export default AllTodoitems

// todo list

function TodoList({todo}) { 
  
 

    return (
      <div
      className={`flex border border-black/10 rounded-lg px-3 py-1.5 gap-x-3 shadow-sm shadow-white/50 duration-300  text-black ${todo.completed?"bg-[#c6e9a7]" : "bg-[#68c0de]"}`}>
      <input
          type="checkbox"
          className="cursor-pointer"
          checked={todo.completed}
          onChange={togglecompleted}
  
   />
  
      <input
          type="text"
          className={`border outline-none w-full bg-transparent rounded-lg `}
          
          />
  
      {/* Edit, Save Button */}
      <button
          className="inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0 disabled:opacity-50"
  > {isTodoEditable? "üìÅ" : "‚úèÔ∏è"}</button>
  
  
      {/* Delete Todo Button */}
      <button
          className="inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0"
          onClick={()=>deletedfunc(todo.id)}
      > ‚ùå </button>
  </div>
  
    )  
  }
  
  export default TodoList